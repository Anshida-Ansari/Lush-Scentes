<%- include('../../views/partials/user/header') %>
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .cart-section {
            padding: 40px 0;
            background-color: white;
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
            color: #000; 
            }

        .cart-header {
            text-transform: uppercase;
            font-size: 18px;
            letter-spacing: 1px;
            margin-bottom: 30px;
            font-weight: 600;
            color: #000;
        }

        .cart-table {
            width: 100%;
            border: none;
        }

        .cart-table td {
            padding: 20px 0;
            border-bottom: 1px solid #e5e5e5;
            vertical-align: top;
            color: #000;
        }

        .cart-table tr:last-child td {
            border-bottom: none;
        }

        .product-img {
            width: 80px;
            height: 80px;
            object-fit: cover;
        }

        .product-details {
            padding-left: 20px;
        }

        .product-name {
            font-size: 14px;
            margin: 0 0 5px 0;
            font-weight: 400;
            color: #000;
        }

        .product-variant {
            font-size: 12px;
            color: #000;
            margin: 0;
        }

        .product-price {
            font-size: 14px;
            text-align: right;
            color: #000;
        }

        .quantity-input {
            max-width: 80px;
            margin: 0;
        }

        .quantity-input input {
            border: 1px solid #e5e5e5;
            text-align: center;
            font-size: 14px;
            padding: 5px;
            width: 100%;
            color: #000;
            
        }

        .quantity-input .btn {
            padding: 2px 8px;
            background: white;
            border: 1px solid #e5e5e5;
            color: #333;
            font-size: 14px;
        }

        .remove-btn {
            color: #000;
            background: none;
            border: none;
            font-size: 16px;
            padding: 0;
        }

        .cart-summary {
            background: #f8f8f8;
            padding: 30px;
        }

        .summary-title {
            text-transform: uppercase;
            font-size: 14px;
            letter-spacing: 1px;
            margin-bottom: 20px;
            font-weight: 500;
            color: #000;
        }

        .summary-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 15px;
            font-size: 14px;
            color: #000;
        }

        .summary-item.total {
            font-weight: 500;
            border-top: 1px solid #e5e5e5;
            padding-top: 15px;
            margin-top: 15px;
        }

        .btn-checkout {
            background: black;
            color: white;
            border: none;
            width: 100%;
            padding: 15px;
            font-size: 14px;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-top: 20px;
        }

        .btn-checkout:hover {
            background: #333;
        }

        .promo-input {
            width: 100%;
            padding: 10px;
            border: 1px solid #e5e5e5;
            margin-bottom: 20px;
            color: #000;
        }

        .btn-continue {
            background: none;
            border: none;
            color: #000;
            text-decoration: underline;
            padding: 0;
            font-size: 14px;
        }

       
        .quantity-control {
            display: flex;
            align-items: center;
            max-width: 100px;
        }

        .quantity-btn {
            background: #f1f1f1;
            border: 1px solid #ddd;
            width: 30px;
            height: 30px;
            padding: 0;
            line-height: 1;
            cursor: pointer;
            font-size: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .quantity-input {
            max-width: 50px;
            text-align: center;
            border-top: 1px solid #ddd;
            border-bottom: 1px solid #ddd;
            border-left: 0;
            border-right: 0;
            height: 30px;
            padding: 0 5px;
        }

        .stock-message {
            font-size: 11px;
            color: #d9534f;
            margin-top: 4px;
        }
        .product-variant {
            font-size: 12px;
            color: #666;
            margin: 0;
        }
        .bg-light {
        background-color: #f8f9fa;
        margin-bottom: 24px;
    }
        .breadcrumb a {
            color: #000000; 
            text-decoration: none; 
            border-bottom: 2px solid transparent; 
            transition: border-bottom 0.3s ease;
        }
        .breadcrumb a:hover {
            color: #c6214d;
            border-bottom: 2px solid #ff5733; 
        }
        .breadcrumb .text-black {
            color: #000000; 
        }
        .btn-primary:hover {
            background-color: #e04e2d; 
            border-color: #e04e2d;
        }
    </style>

<div class="cart-section">
    <div class="bg-light py-3">
        <div class="container">
            <div class="row">
                <div class="col-md-12 mb-0 breadcrumb">
                    <a href="/">Home</a> <span class="mx-2 mb-0">/</span>
                    <a href="/shop">Shop</a> <span class="mx-2 mb-0">/</span>
                    <strong><a href="/cart">Cart</a> <span class="mx-2 mb-0"></span></strong>
                </div>
            </div>
        </div>
    </div>
    
    <div class="container">
        
        <h1 class="cart-header">My Shopping Bag</h1>
        <div class="row">
            <div class="col-md-8">
                <table class="cart-table">
                    <tbody>
                        <% if (cart && cart.items && cart.items.length > 0) { %>
                            <% cart.items.forEach(item=> { %>
                                <% if (item.productId) { %>
                                    <tr>
                                        <td style="width: 80px;">
                                          <img src="<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>" class="product-img">
                                        </td>
                                        <td>
                                          <div class="product-details">
                                            <h3 class="product-name"><%= item.productId.productName %></h3>
                                            <p class="product-variant">
                                              Size: <%= item.variant.size %> | 
                                              Price: ₹<%= item.variant.salesPrice || item.variant.regularPrice %>
                                              <% if (item.productId.isBlocked) { %>
                                                <span style="color: #d9534f;"> (Blocked - Unavailable)</span>
                                              <% } %>
                                            </p>
                                          </div>
                                        </td>
                                        <td style="width: 120px;">
                                          <div class="quantity-control">
                                            <button class="quantity-btn decrement" data-product-id="<%= item.productId._id %>" data-size="<%= item.variant.size %>">-</button>
                                            <input type="text" class="form-control quantity-input" readonly value="<%= item.variant.quantity %>"
                                              data-product-id="<%= item.productId._id %>" data-size="<%= item.variant.size %>"
                                              data-price="<%= item.variant.salesPrice || item.variant.regularPrice %>"
                                              data-stock="<%= item.productId.variants.find(v => v.size === item.variant.size)?.quantity || 0 %>">
                                            <button class="quantity-btn increment" data-product-id="<%= item.productId._id %>" data-size="<%= item.variant.size %>">+</button>
                                          </div>
                                          <div class="stock-message" id="stock-msg-<%= item.productId._id %>-<%= item.variant.size %>"></div>
                                        </td>
                                        <td class="product-price" data-product-id="<%= item.productId._id %>" data-size="<%= item.variant.size %>">
                                          ₹<%= ((item.variant.salesPrice || item.variant.regularPrice) * item.variant.quantity).toFixed(2) %>
                                        </td>
                                        <td style="width: 30px;">
                                          <button class="remove-btn" data-product-id="<%= item.productId._id %>" data-size="<%= item.variant.size %>">×</button>
                                        </td>
                                      </tr>  
                                <% } %>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="5" style="text-align: center;">Your shopping bag is empty</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
                <div style="margin-top: 20px;">
                    <button class="btn-continue" onclick="loadShop()">Continue Shopping</button>
                </div>
            </div>
            <div class="col-md-4">
                <div class="cart-summary">
                    <h4 class="summary-title">Summary</h4>
                    <div class="summary-item">
                        <span>Subtotal</span>
                        <span>₹<%= subtotal.toFixed(2) %></span>
                    </div>
                    <% if (discount > 0) { %>
                        <div class="summary-item">
                            <span>Discount</span>
                            <span>-₹<%= discount.toFixed(2) %></span>
                        </div>
                    <% } %>
                    <div class="summary-item">
                        <span>Shipping</span>
                        <span>Free</span>
                    </div>
                    <div class="summary-item total">
                        <span>Estimated Total</span>
                        <span>₹<%= total.toFixed(2) %></span>
                    </div>
                    <button class="btn-checkout" <%= cart.items.length === 0 ? 'disabled' : '' %>>
                        Checkout
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

 <script>
    document.addEventListener('DOMContentLoaded', function () {
        function updateCartTotals() {
            let subtotal = 0;
            document.querySelectorAll('.quantity-input').forEach(input => {
                const price = parseFloat(input.dataset.price);
                const quantity = parseInt(input.value);
                const itemTotal = price * quantity;
                subtotal += itemTotal;
    
                const totalCell = input.closest('tr').querySelector('.product-price');
                if (totalCell) {
                    totalCell.textContent = `₹${itemTotal.toFixed(2)}`;
                }
            });
    
            const discount = 0;
            const total = subtotal - discount;
    
            const subtotalElement = document.querySelector('.summary-item:nth-child(2) span:last-child');
            const totalElement = document.querySelector('.summary-item.total span:last-child');
    
            if (subtotalElement) subtotalElement.textContent = `₹${subtotal.toFixed(2)}`;
            if (totalElement) totalElement.textContent = `₹${total.toFixed(2)}`;
        }
    
        function showStockLimitMessage(productId, size, stock) {
            const messageElement = document.getElementById(`stock-msg-${productId}-${size}`);
            if (messageElement) {
                messageElement.textContent = `Stock limit: ${stock}`;
            }
    
            Swal.fire({
                title: 'Stock Limit Reached',
                text: `Only ${stock} items available in stock`,
                icon: 'warning',
                confirmButtonColor: '#3085d6'
            });
    
            setTimeout(() => {
                if (messageElement) {
                    messageElement.textContent = '';
                }
            }, 3000);
        }
    
        function showQuantityLimitMessage() {
            Swal.fire({
                title: 'Quantity Limit Reached',
                text: 'Maximum quantity allowed is 5 items.',
                icon: 'warning',
                confirmButtonColor: '#3085d6'
            });
        }
    
        async function updateCartItem(productId, size, quantity) {
            try {
                const response = await fetch(`/update/${productId}/${size}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ quantity })
                });
    
                const data = await response.json();
    
                if (response.ok) {
                    updateCartTotals();
                } else if (response.status === 400 && data.message === 'Stock limit reached') {
                    const input = document.querySelector(`.quantity-input[data-product-id="${productId}"][data-size="${size}"]`);
                    if (input) {
                        input.value = data.availableStock;
                        updateItemTotal(input);
                    }
                    showStockLimitMessage(productId, size, data.availableStock);
                } else {
                    throw new Error(data.message || 'Error updating cart');
                }
            } catch (error) {
                console.error('Error updating cart:', error);
                Swal.fire({
                    title: 'Error',
                    text: error.message || 'Failed to update cart',
                    icon: 'error',
                    confirmButtonColor: '#3085d6'
                });
            }
        }
    
        function updateItemTotal(input) {
            const price = parseFloat(input.dataset.price);
            const quantity = parseInt(input.value);
            const total = price * quantity;
            const totalCell = input.closest('tr').querySelector('.product-price');
            if (totalCell) {
                totalCell.textContent = `₹${total.toFixed(2)}`;
            }
            updateCartTotals();
        }
    
        document.querySelectorAll('.decrement').forEach(button => {
            button.addEventListener('click', function () {
                const productId = this.dataset.productId;
                const size = this.dataset.size;
                const input = this.nextElementSibling;
                let value = parseInt(input.value);
                if (value > 1) {
                    input.value = value - 1;
                    updateCartItem(productId, size, value - 1);
                }
            });
        });
    
        document.querySelectorAll('.increment').forEach(button => {
            button.addEventListener('click', function () {
                const productId = this.dataset.productId;
                const size = this.dataset.size;
                const input = this.previousElementSibling;
                const stock = parseInt(input.dataset.stock);
                let value = parseInt(input.value);
                const maxQuantity = 5;
    
                if (value < maxQuantity && value < stock) {
                    input.value = value + 1;
                    updateCartItem(productId, size, value + 1);
                } else if (value >= maxQuantity) {
                    input.value = maxQuantity; // Ensure value doesn't exceed 5
                    showQuantityLimitMessage();
                } else {
                    showStockLimitMessage(productId, size, stock);
                }
            });
        });
    
        // Handle manual input changes
        document.querySelectorAll('.quantity-input').forEach(input => {
            input.addEventListener('input', function () {
                const productId = this.dataset.productId;
                const size = this.dataset.size;
                const stock = parseInt(this.dataset.stock);
                let value = parseInt(this.value);
                const maxQuantity = 5;
    
                if (isNaN(value) || value < 1) {
                    this.value = 1;
                    value = 1;
                } else if (value > maxQuantity) {
                    this.value = maxQuantity;
                    showQuantityLimitMessage();
                    value = maxQuantity;
                } else if (value > stock) {
                    this.value = stock;
                    showStockLimitMessage(productId, size, stock);
                    value = stock;
                }
    
                updateCartItem(productId, size, value);
            });
        });
    
        document.querySelectorAll('.remove-btn').forEach(button => {
            button.addEventListener('click', async function () {
                const productId = this.dataset.productId;
                const size = this.dataset.size;
                const row = this.closest('tr');
    
                const result = await Swal.fire({
                    title: 'Remove Item',
                    text: 'Are you sure you want to remove this item from your cart?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, remove it!',
                    cancelButtonText: 'Cancel'
                });
    
                if (result.isConfirmed) {
                    try {
                        const response = await fetch(`/update/${productId}/${size}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json',
                            }
                        });
                        const data = await response.json();
    
                        if (response.ok) {
                            row.remove();
                            updateCartTotals();
    
                            const remainingRows = document.querySelectorAll('.cart-table tbody tr').length;
                            if (remainingRows === 0) {
                                const tbody = document.querySelector('.cart-table tbody');
                                tbody.innerHTML = `
                                    <tr>
                                        <td colspan="5" class="text-center">Your shopping bag is empty</td>
                                    </tr>
                                `;
                                document.querySelector('.btn-checkout').disabled = true;
                            }
    
                            await Swal.fire({
                                title: 'Removed!',
                                text: 'Item has been removed from your cart.',
                                icon: 'success',
                                timer: 2000,
                                showConfirmButton: false
                            });
                        } else {
                            throw new Error(data.message || 'Failed to remove item');
                        }
                    } catch (error) {
                        console.error('Error removing item:', error);
                        await Swal.fire({
                            title: 'Error!',
                            text: 'Failed to remove item from cart. Please try again.',
                            icon: 'error',
                            confirmButtonColor: '#3085d6'
                        });
                    }
                }
            });
        });
    
        document.querySelector('.btn-checkout').addEventListener('click', async function () {
            if (!this.disabled) {
                const cartItems = [];
                document.querySelectorAll('.cart-table tbody tr').forEach(row => {
                    const productId = row.querySelector('.quantity-btn').dataset.productId;
                    const size = row.querySelector('.quantity-btn').dataset.size;
                    const quantityInput = row.querySelector('.quantity-input');
                    const quantity = parseInt(quantityInput.value);
                    const price = parseFloat(quantityInput.dataset.price);
                    const isBlocked = row.querySelector('.product-variant span') !== null;
                    const stock = parseInt(quantityInput.dataset.stock);
    
                    cartItems.push({ productId, size, quantity, price, isBlocked, stock });
                });
    
                const hasBlockedItems = cartItems.some(item => item.isBlocked);
                if (hasBlockedItems) {
                    Swal.fire({
                        title: 'Checkout Blocked',
                        text: 'Your cart contains blocked items that are no longer available. Please remove them to proceed.',
                        icon: 'error',
                        confirmButtonColor: '#3085d6'
                    });
                    return;
                }
                let hasOutOfStock = false;
                for (const item of cartItems) {
                    if (item.quantity > item.stock) {
                        hasOutOfStock = true;
                        break;
                    }
                }
                if (hasOutOfStock) {
                    Swal.fire({
                        title: 'Stock Limit Reached',
                        text: 'Some items in your cart are no longer available or exceed current stock. Please review your cart.',
                        icon: 'warning',
                        confirmButtonColor: '#3085d6'
                    });
                    return;
                }
    
                Swal.fire({
                    title: 'Proceeding to Checkout',
                    text: 'Please wait...',
                    icon: 'info',
                    showConfirmButton: false,
                    allowOutsideClick: false,
                    willOpen: () => {
                        Swal.showLoading();
                    }
                });
                window.location.href = '/checkout';
            } else {
                Swal.fire({
                    title: 'Cart Empty',
                    text: 'Please add items to your cart before checking out.',
                    icon: 'info',
                    confirmButtonColor: '#3085d6'
                });
            }
        });
    
        function loadShop() {
            window.location.href = '/shop';
        }
    
        updateCartTotals();
    });
    </script>
    <%- include('../../views/partials/user/footer') %>