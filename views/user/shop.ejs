<%-include('../../views/partials/user/header')%>

<style>
  .shop-container {
    display: flex;
    width: 100%;
    min-height: 100vh;
    padding: 20px;
  }
  
  .filters-sidebar {
    width: 280px;
    padding: 20px;
    background: #fff;
    border-right: 1px solid #eee;
    height: 100%;
  }
  
  .products-grid {
    flex: 1;
    padding: 20px 30px;
  }
  
  .filter-section {
    margin-bottom: 25px;
  }
  
  .filter-section h3 {
    font-size: 16px;
    margin-bottom: 10px;
    color: #333;
    font-weight: 600;
  }
  
  .filter-select {
    width: 100%;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
    margin-bottom: 10px;
    font-size: 14px;
  }
  
  .filter-button {
    width: 100%;
    padding: 10px;
    background: #007bff;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    margin-bottom: 10px;
  }
  
  .filter-button:hover {
    background: #0056b3;
  }
  
  .clear-button {
    width: 100%;
    padding: 10px;
    background: #f8f9fa;
    color: #333;
    border: 1px solid #ddd;
    border-radius: 4px;
    cursor: pointer;
    text-align: center;
    text-decoration: none;
  }
  
  .clear-button:hover {
    background: #e9ecef;
  }
  
  .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
    padding: 20px;
  }
  
  .product-card {
    border: 1px solid #eee;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.2s;
  }
  
  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
  }
  
  .product-image {
    width: 100%;
    height: 250px;
    object-fit: cover;
  }
  
  .product-info {
    padding: 15px;
  }
  
  .product-name {
    font-size: 16px;
    color: #333;
    margin-bottom: 8px;
    text-decoration: none;
  }
  
  .product-price {
    font-size: 18px;
    font-weight: bold;
    color: #007bff;
  }
  </style>
  <style>
    .shop-container {
      display: flex;
      width: 100%;
      min-height: 100vh;
      padding: 20px;
    }
    
    .filters-sidebar {
      width: 280px;
      padding: 20px;
      background: #fff;
      border-right: 1px solid #eee;
      height: 100%;
    }
    
    .products-grid {
      flex: 1;
      padding: 20px 30px;
    }
    
    .filter-section {
      margin-bottom: 25px;
    }
    
    .filter-section h3 {
      font-size: 16px;
      margin-bottom: 10px;
      color: #333;
      font-weight: 600;
    }
    
    .filter-select {
      width: 100%;
      padding: 8px;
      border: 1px solid #ddd;
      border-radius: 4px;
      margin-bottom: 10px;
      font-size: 14px;
    }
    
    .filter-button {
      width: 100%;
      padding: 10px;
      background: #e34298;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      margin-bottom: 10px;
    }
    
    .filter-button:hover {
      background: #e34298;
    }
    
    .clear-button {
      width: 100%;
      padding: 10px;
      background: #f8f9fa;
      color: #333;
      border: 1px solid #ddd;
      border-radius: 4px;
      cursor: pointer;
      text-align: center;
      text-decoration: none;
    }
    
    .clear-button:hover {
      background: #efe9ec;
    }
    
    .products-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 20px;
      padding: 20px;
    }
    
    .product-card {
      border: 1px solid #eee;
      border-radius: 8px;
      overflow: hidden;
      transition: transform 0.2s;
    }
    
    .product-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }
    
    .product-image {
      width: 100%;
      height: 250px;
      object-fit: cover;
    }
    
    .product-info {
      padding: 15px;
    }
    
    .product-name {
      font-size: 16px;
      color: #333;
      margin-bottom: 8px;
      text-decoration: none;
    }
    
    .product-price {
      font-size: 18px;
      font-weight: bold;
      color: #000001;
    }
    .filter-select[type="text"] {
      padding: 10px;
      font-size: 14px;
    }
    
    
    .no-results {
      display: block;
      text-align: center;
      width: 100%;
      padding: 40px;
      color: #666;
      font-size: 16px;
    }
    .product-image-container {
  position: relative;
}

.wishlist-btn {
  position: absolute;
  top: 10px;
  right: 10px;
  background: rgba(255, 255, 255, 0.8);
  border: none;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background 0.3s, color 0.3s;
}

.wishlist-btn:hover {
  background: rgba(255, 255, 255, 1);
  color: #ff2020; 
}

.wishlist-btn .icon-heart-o::before {
  content: "\2661"; 
  font-size: 18px;
}

.wishlist-btn.added .icon-heart-o::before {
  content: "\2665"; 
  color: #ff2020; 
}
    </style>
  <div class="site-wrap">
    <div class="shop-container">
      <div class="filters-sidebar">
        <form action="/shop" method="get">
          <!-- Category Filter -->
          <div class="filter-section">
            <h3>Category</h3>
            <select name="category" class="filter-select">
              <option value="">All Categories</option>
              <% categories.forEach(function(category) { %>
                <option value="<%= category._id %>" 
                  <%= selectedCategory === category._id.toString() ? 'selected' : '' %>>
                  <%= category.name %>
                </option>
              <% }); %>
            </select>
          </div>
  
          <!-- Price Range Filter -->
          <div class="filter-section">
            <h3>Price Range</h3>
            <select name="priceRange" class="filter-select">
              <option value="">All Prices</option>
              <option value="0-1000" <%= selectedPriceRange === '0-1000' ? 'selected' : '' %>>Under ₹1000</option>
              <option value="1000-2000" <%= selectedPriceRange === '1000-2000' ? 'selected' : '' %>>₹1000 - ₹2000</option>
              <option value="2000-3000" <%= selectedPriceRange === '2000-3000' ? 'selected' : '' %>>₹2000 - ₹3000</option>
              <option value="3000-5000" <%= selectedPriceRange === '3000-5000' ? 'selected' : '' %>>₹3000 - ₹5000</option>
              <option value="5000" <%= selectedPriceRange === '5000' ? 'selected' : '' %>>₹5000 & Above</option>
            </select>
          </div>
  
          <!-- Sort By Filter -->
          <div class="filter-section">
            <h3>Sort By</h3>
            <select name="sortBy" class="filter-select">
              <option value="">Select Sorting</option>
              <option value="priceLowToHigh" <%= sortBy === 'priceLowToHigh' ? 'selected' : '' %>>Price: Low to High</option>
              <option value="nameAZ" <%= sortBy === 'nameAZ' ? 'selected' : '' %>>Alphabetical (A-Z)</option>
              <option value="newest" <%= sortBy === 'newest' ? 'selected' : '' %>>New Arrivals</option>
            </select>
          </div>
  
          <button type="submit" class="filter-button">Apply Filters</button>
          <a href="/shop" class="clear-button">Clear Filters</a>
        </form>
      </div>
  
      <div class="products-grid">
        <% if (noProductsFound) { %>
          <div class="no-results">
            <p>No products found matching your filters.</p>
          </div>
        <% } else { %>
          <% for(let i = 0; i < products.length; i++) { %>
            <div class="product-card">
              <div class="product-image-container">
                <a href="/productDetailsPage?id=<%= products[i]._id %>">
                  <img 
                    src="<%= products[i].productImage[0] %>" 
                    alt="<%= products[i].productName %>" 
                    class="product-image"
                  >
                </a>
                <!-- Wishlist Icon -->
                <button 
                  class="wishlist-btn" 
                  onclick="addToWishlist('<%= products[i]._id %>', event)"
                  title="Add to Wishlist"
                >
                  <span class="icon-heart-o"></span>
                </button>
              </div>
              <div class="product-info">
                <a href="/productDetailsPage?id=<%= products[i]._id %>" class="product-name">
                  <%= products[i].productName %>
                </a>
                <% 
                  let defaultVariant = products[i].variants.find(v => v.size === '15ml') || products[i].variants[0];
                  let displayPrice = defaultVariant.salesPrice || defaultVariant.regularPrice;
                %>
                <div class="product-price">₹<%= displayPrice %></div>
                <div class="product-size"><%= defaultVariant.size %></div>
              </div>
            </div>
          <% } %>
        <% } %>
      </div>
      
    </div>
  </div>
 
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<script>
  function showToast(message, type = "info") {
  const colors = {
    success: { bg: "#4CAF50", text: "#fff" },
    info: { bg: "#1286b4", text: "#fff" },
    warning: { bg: "#FF9800", text: "#fff" },
    error: { bg: "#F44336", text: "#fff" }
  };
  
  const colorScheme = colors[type] || colors.info;
  
  const toast = document.createElement("div");
  toast.className = "custom-toast";
  toast.innerHTML = `
    <div class="toast-icon">
      ${type === "success" ? '<i class="fas fa-check-circle"></i>' : 
        type === "info" ? '<i class="fas fa-info-circle"></i>' : 
        type === "warning" ? '<i class="fas fa-exclamation-triangle"></i>' : 
        '<i class="fas fa-times-circle"></i>'}
    </div>
    <div class="toast-message">${message}</div>
    <div class="toast-close">&times;</div>
  `;
  
  Object.assign(toast.style, {
    display: "flex",
    alignItems: "center",
    position: "fixed",
    top: "20px",
    right: "20px",
    zIndex: "10000",
    padding: "12px 16px",
    backgroundColor: colorScheme.bg,
    color: colorScheme.text,
    borderRadius: "4px",
    boxShadow: "0 4px 8px rgba(0, 0, 0, 0.1)",
    minWidth: "250px",
    maxWidth: "350px",
    opacity: "0",
    transform: "translateY(-20px)",
    transition: "all 0.3s ease-in-out",
    fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
    fontSize: "14px"
  });
  
  const iconStyle = toast.querySelector(".toast-icon").style;
  Object.assign(iconStyle, {
    marginRight: "12px",
    fontSize: "20px"
  });
  
  const messageStyle = toast.querySelector(".toast-message").style;
  Object.assign(messageStyle, {
    flex: "1"
  });
  
  const closeStyle = toast.querySelector(".toast-close").style;
  Object.assign(closeStyle, {
    marginLeft: "12px",
    cursor: "pointer",
    fontSize: "18px",
    fontWeight: "bold"
  });
  
  toast.querySelector(".toast-close").addEventListener("click", () => {
    toast.style.opacity = "0";
    toast.style.transform = "translateY(-20px)";
    setTimeout(() => toast.remove(), 300);
  });
  
  document.body.appendChild(toast);
  
  const progressBar = document.createElement("div");
  progressBar.className = "toast-progress";
  Object.assign(progressBar.style, {
    position: "absolute",
    bottom: "0",
    left: "0",
    height: "3px",
    backgroundColor: "rgba(255, 255, 255, 0.7)",
    width: "100%",
    transition: "width 3s linear"
  });
  toast.appendChild(progressBar);
  
  setTimeout(() => {
    toast.style.opacity = "1";
    toast.style.transform = "translateY(0)";
    progressBar.style.width = "0";
  }, 10);
  
  setTimeout(() => {
    toast.style.opacity = "0";
    toast.style.transform = "translateY(-20px)";
    setTimeout(() => toast.remove(), 300);
  }, 3000);
}

function addToWishlist(productId, event) {
  event.preventDefault();
  
  if (!document.querySelector('link[href*="font-awesome"]')) {
    const fontAwesomeLink = document.createElement('link');
    fontAwesomeLink.rel = 'stylesheet';
    fontAwesomeLink.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css';
    document.head.appendChild(fontAwesomeLink);
  }

  fetch('/addWishlist', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify({
      productId: productId
    })
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      const button = event.target.closest('.wishlist-btn');
      button.classList.add('added');
      showToast('Product added to wishlist!', 'success');
    } else {
      showToast(data.message || 'Failed to add to wishlist', 'error');
    }
  })
  .catch(error => {
    console.error('Error:', error);
    showToast('Something went wrong. Please try again.', 'error');
  });
}
</script>
<%-include('../../views/partials/user/footer')%>