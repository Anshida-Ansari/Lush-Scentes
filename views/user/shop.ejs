<%- include('../../views/partials/user/header') %>

<style>
  /* Main Layout */
  .shop-container {
    display: flex;
    flex-direction: column;
    width: 100%;
    min-height: 100vh;
    padding: 20px;
  }
  
  .shop-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
    padding: 0 10px;
  }
  
  .filter-button {
    display: flex;
    align-items: center;
    padding: 10px 20px;
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 4px;
    cursor: pointer;
    font-size: 15px;
    transition: all 0.3s ease;
  }
  
  .filter-button:hover {
    background-color: #f5f5f5;
  }
  
  .filter-button i {
    margin-right: 10px;
  }
  
  .products-count {
    font-size: 15px;
    color: #666;
  }
  
  /* Products Grid */
  .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
    padding: 20px 10px;
  }
  
  .product-card {
    border: 1px solid #eee;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.2s;
  }
  
  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
  }
  
  .product-image {
    width: 100%;
    height: 250px;
    object-fit: cover;
  }
  
  .product-info {
    padding: 15px;
  }
  
  .product-name {
    font-size: 16px;
    color: #333;
    margin-bottom: 8px;
    text-decoration: none;
  }
  
  .product-price {
    font-size: 18px;
    font-weight: bold;
    color: #000001;
  }
  
  .no-results {
    display: block;
    text-align: center;
    width: 100%;
    padding: 40px;
    color: #666;
    font-size: 16px;
  }

  .product-image-container {
    position: relative;
  }

  .wishlist-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    background: rgba(255, 255, 255, 0.8);
    border: none;
    border-radius: 50%;
    width: 30px;
    height: 30px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background 0.3s, color 0.3s;
  }

  .wishlist-btn:hover {
    background: rgba(255, 255, 255, 1);
    color: #ff2020;
  }

  .wishlist-btn .icon-heart-o::before {
    content: "\2661";
    font-size: 18px;
  }

  .wishlist-btn.added .icon-heart-o::before {
    content: "\2665";
    color: #ff2020;
  }
  
  /* Filter Modal */
  .filter-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1000;
    overflow: auto;
  }
  
  .filter-modal-content {
    position: relative;
    background-color: #fff;
    margin: 10% auto;
    padding: 0;
    width: 90%;
    max-width: 600px;
    border-radius: 8px;
    box-shadow: 0 4px 20px rgba(0,0,0,0.1);
    animation: modalFadeIn 0.3s;
  }
  
  @keyframes modalFadeIn {
    from {opacity: 0; transform: translateY(-50px);}
    to {opacity: 1; transform: translateY(0);}
  }
  
  .filter-modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px;
    border-bottom: 1px solid #eee;
  }
  
  .filter-modal-header h2 {
    margin: 0;
    font-size: 20px;
    color: #333;
  }
  
  .filter-modal-close {
    font-size: 24px;
    background: none;
    border: none;
    cursor: pointer;
    color: #666;
  }
  
  .filter-modal-body {
    padding: 20px;
  }
  
  .filter-section {
    margin-bottom: 25px;
  }
  
  .filter-section h3 {
    font-size: 16px;
    margin-bottom: 15px;
    color: #333;
    font-weight: 600;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
  }
  
  .filter-section h3::after {
    content: "+";
    font-size: 18px;
  }
  
  .filter-section.open h3::after {
    content: "-";
  }
  
  .filter-options {
    display: none;
    padding: 10px 0;
  }
  
  .filter-section.open .filter-options {
    display: block;
  }
  
  .category-options label {
    display: block;
    padding: 8px 5px;
    margin-bottom: 5px;
    cursor: pointer;
  }
  
  .category-options input[type="radio"] {
    margin-right: 10px;
  }
  
  /* Price Range Slider */
  .price-slider-container {
    padding: 10px 0;
  }

  .slider {
    width: 100%;
    margin: 10px 0;
    -webkit-appearance: none;
    height: 5px;
    background: #ddd;
    outline: none;
    border-radius: 5px;
  }

  .slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 15px;
    height: 15px;
    background: #e34298;
    cursor: pointer;
    border-radius: 50%;
  }

  .price-values {
    display: flex;
    justify-content: space-between;
    font-size: 14px;
    color: #666;
    margin-top: 10px;
  }
  
  /* Sort Options */
  .sort-options label {
    display: block;
    padding: 8px 5px;
    margin-bottom: 5px;
    cursor: pointer;
  }
  
  .sort-options input[type="radio"] {
    margin-right: 10px;
  }
  
  .filter-modal-footer {
    display: flex;
    justify-content: space-between;
    padding: 15px 20px;
    border-top: 1px solid #eee;
  }
  
  .filter-button-modal {
    padding: 10px 25px;
    background: #e34298;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
  }
  
  .filter-button-modal:hover {
    background: #d13b8a;
  }
  
  .clear-button-modal {
    padding: 10px 25px;
    background: #f8f9fa;
    color: #333;
    border: 1px solid #ddd;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
  }
  
  .clear-button-modal:hover {
    background: #efe9ec;
  }

  /* Applied Filters Section */
  .applied-filters {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    margin-bottom: 20px;
    padding: 0 10px;
  }
  
  .filter-tag {
    display: flex;
    align-items: center;
    background-color: #f8f9fa;
    border: 1px solid #eee;
    border-radius: 20px;
    padding: 5px 12px;
    font-size: 13px;
    color: #333;
  }
  
  .filter-tag span {
    margin-right: 8px;
  }
  
  .filter-tag button {
    background: none;
    border: none;
    color: #666;
    cursor: pointer;
    font-size: 14px;
    padding: 0;
    margin-left: 5px;
  }
</style>

<div class="site-wrap">
  <div class="shop-container">
    <!-- Shop Header with Filter Button -->
    <div class="shop-header">
      <button class="filter-button" onclick="openFilterModal()">
        <i class="fas fa-sliders-h"></i> Filter
      </button>
      <div class="products-count"><%= totalProducts %> products</div>
    </div>
    
    <!-- Applied Filters -->
    <div class="applied-filters" id="appliedFilters">
      <!-- Applied filters will be added here dynamically -->
    </div>
    
    <!-- Products Grid -->
    <div class="products-grid">
      <% if (noProductsFound) { %>
        <div class="no-results">
          <p>No products found matching your filters.</p>
        </div>
      <% } else { %>
        <% products.forEach(function(product) { %>
          <div class="product-card">
            <div class="product-image-container">
              <a href="/productDetailsPage?id=<%= product._id %>">
                <img 
                  src="<%= product.productImage[0] %>" 
                  alt="<%= product.productName %>" 
                  class="product-image"
                >
              </a>
              <button 
                class="wishlist-btn" 
                onclick="addToWishlist('<%= product._id %>', event)"
                title="Add to Wishlist"
              >
                <span class="icon-heart-o"></span>
              </button>
            </div>
            <div class="product-info">
              <a href="/productDetailsPage?id=<%= product._id %>" class="product-name">
                <%= product.productName %>
              </a>
              <% 
                let defaultVariant = product.variants.find(v => v.size === '15ml') || product.variants[0];
                let displayPrice = defaultVariant.salesPrice || defaultVariant.regularPrice;
              %>
              <div class="product-price">₹<%= displayPrice %></div>
              <div class="product-size"><%= defaultVariant.size %></div> 
            </div>
          </div>
        <% }); %>
      <% } %>
    </div>
  </div>
  
  <!-- Filter Modal -->
  <div id="filterModal" class="filter-modal">
    <div class="filter-modal-content">
      <div class="filter-modal-header">
        <h2>Filter Products</h2>
        <button class="filter-modal-close" onclick="closeFilterModal()">&times;</button>
      </div>
      
      <form id="filterForm" action="/shop" method="get">
        <!-- Hidden input for search value -->
        <input type="hidden" id="searchInput" name="search" value="<%= query.search || '' %>">
        
        <div class="filter-modal-body">
          <!-- Category Filter Section -->
          <div class="filter-section" onclick="toggleSection(this)">
            <h3>Category</h3>
            <div class="filter-options category-options">
              <label>
                <input type="radio" name="category" value="" <%= !selectedCategory ? 'checked' : '' %>> All Categories
              </label>
              <% categories.forEach(function(category) { %>
                <label>
                  <input type="radio" name="category" value="<%= category._id %>" <%= selectedCategory === category._id.toString() ? 'checked' : '' %>> <%= category.name %>
                </label>
              <% }); %>
            </div>
          </div>
          
          <!-- Price Range Section -->
          <div class="filter-section" onclick="toggleSection(this)">
            <h3>Price Range (₹)</h3>
            <div class="filter-options">
              <div class="price-slider-container">
                <input 
                  type="range" 
                  min="500" 
                  max="15000" 
                  value="<%= selectedPriceRange ? selectedPriceRange.split('-')[0] : '500' %>" 
                  class="slider" 
                  id="priceMin"
                  name="priceMin"
                >
                <input 
                  type="range" 
                  min="500" 
                  max="15000" 
                  value="<%= selectedPriceRange ? (selectedPriceRange.split('-')[1] || '15000') : '15000' %>" 
                  class="slider" 
                  id="priceMax"
                  name="priceMax"
                >
                <div class="price-values">
                  <span id="min-value">₹<%= selectedPriceRange ? selectedPriceRange.split('-')[0] : '500' %></span>
                  <span>-</span>
                  <span id="max-value">₹<%= selectedPriceRange ? (selectedPriceRange.split('-')[1] || '15000') : '15000' %></span>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Sort By Section -->
          <div class="filter-section" onclick="toggleSection(this)">
            <h3>Sort By</h3>
            <div class="filter-options sort-options">
              <label>
                <input type="radio" name="sortBy" value="newest" <%= sortBy === 'newest' || !sortBy ? 'checked' : '' %>> New Arrivals
              </label>
              <label>
                <input type="radio" name="sortBy" value="priceLowToHigh" <%= sortBy === 'priceLowToHigh' ? 'checked' : '' %>> Price: Low to High
              </label>
              <label>
                <input type="radio" name="sortBy" value="nameAZ" <%= sortBy === 'nameAZ' ? 'checked' : '' %>> Alphabetical (A-Z)
              </label>
            </div>
          </div>
        </div>
        
        <div class="filter-modal-footer">
          <button type="button" class="clear-button-modal" onclick="clearFilters()">Clear All</button>
          <button type="submit" class="filter-button-modal">Apply Filters</button>
        </div>
      </form>
    </div>
  </div>
</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<script>
  // Modal Functions
  function openFilterModal() {
    document.getElementById('filterModal').style.display = 'block';
    document.body.style.overflow = 'hidden';
  }
  
  function closeFilterModal() {
    document.getElementById('filterModal').style.display = 'none';
    document.body.style.overflow = 'auto';
  }
  
  // Close modal when clicking outside of it
  window.onclick = function(event) {
    const modal = document.getElementById('filterModal');
    if (event.target === modal) {
      closeFilterModal();
    }
  }
  
  // Toggle filter sections
  function toggleSection(section) {
    const wasOpen = section.classList.contains('open');
    
    // Close all sections first
    document.querySelectorAll('.filter-section').forEach(el => {
      el.classList.remove('open');
    });
    
    // If the clicked section wasn't open, open it
    if (!wasOpen) {
      section.classList.add('open');
    }
  }
  
  // Handle price slider updates
  const priceMin = document.getElementById('priceMin');
  const priceMax = document.getElementById('priceMax');
  const minValue = document.getElementById('min-value');
  const maxValue = document.getElementById('max-value');
  
  function updatePriceValues() {
    let min = parseInt(priceMin.value);
    let max = parseInt(priceMax.value);
    
    if (min < 500) min = 500;
    if (max > 15000) max = 15000;
    if (min > max) {
      [min, max] = [max, min];
      priceMin.value = min;
      priceMax.value = max;
    }
    
    minValue.textContent = `₹${min}`;
    maxValue.textContent = `₹${max}`;
  }
  
  priceMin.addEventListener('input', updatePriceValues);
  priceMax.addEventListener('input', updatePriceValues);
  updatePriceValues();
  
  // Clear all filters
  function clearFilters() {
    // Reset form elements
    document.querySelectorAll('input[name="category"]')[0].checked = true;
    document.querySelectorAll('input[name="sortBy"]')[0].checked = true;
    priceMin.value = 500;
    priceMax.value = 15000;
    document.getElementById('searchInput').value = '';
    updatePriceValues();
    updateAppliedFilters();
  }
  
  // Update applied filters display
  function updateAppliedFilters() {
    const appliedFiltersContainer = document.getElementById('appliedFilters');
    appliedFiltersContainer.innerHTML = '';
    
    // Get current filters
    const searchValue = '<%= query.search || "" %>';
    const categoryValue = '<%= selectedCategory %>';
    const priceMinValue = '<%= selectedPriceRange ? selectedPriceRange.split("-")[0] : "500" %>';
    const priceMaxValue = '<%= selectedPriceRange ? selectedPriceRange.split("-")[1] || "15000" : "15000" %>';
    const sortByValue = '<%= sortBy || "" %>';
    
    // Add search filter tag
    if (searchValue) {
      addFilterTag('Search', searchValue, 'search');
    }
    
    // Add category filter tag
    if (categoryValue) {
      const categoryName = '<%= selectedCategory ? categories.find(c => c._id.toString() === selectedCategory)?.name || "" : "" %>';
      if (categoryName) {
        addFilterTag('Category', categoryName, 'category');
      }
    }
    
    // Add price range filter tag
    if (priceMinValue !== '500' || priceMaxValue !== '15000') {
      addFilterTag('Price', `₹${priceMinValue} - ₹${priceMaxValue}`, 'price');
    }
    
    // Add sort filter tag
    if (sortByValue) {
      let sortLabel = '';
      switch (sortByValue) {
        case 'priceLowToHigh':
          sortLabel = 'Price: Low to High';
          break;
        case 'nameAZ':
          sortLabel = 'Alphabetical (A-Z)';
          break;
        case 'newest':
          sortLabel = 'New Arrivals';
          break;
      }
      addFilterTag('Sort', sortLabel, 'sortBy');
    }
  }
  
  function addFilterTag(type, value, param) {
    const appliedFiltersContainer = document.getElementById('appliedFilters');
    
    const filterTag = document.createElement('div');
    filterTag.className = 'filter-tag';
    filterTag.innerHTML = `
      <span><strong>${type}:</strong> ${value}</span>
      <button type="button" onclick="removeFilter('${param}')">×</button>
    `;
    
    appliedFiltersContainer.appendChild(filterTag);
  }
  
  function removeFilter(param) {
    const form = document.getElementById('filterForm');
    
    switch (param) {
      case 'search':
        document.getElementById('searchInput').value = '';
        break;
      case 'category':
        document.querySelectorAll('input[name="category"]')[0].checked = true;
        break;
      case 'price':
        priceMin.value = 500;
        priceMax.value = 15000;
        updatePriceValues();
        break;
      case 'sortBy':
        document.querySelectorAll('input[name="sortBy"]')[0].checked = true;
        break;
    }
    
    form.submit();
  }
  
  // Wishlist functionality
  function addToWishlist(productId, event) {
    event.preventDefault();
    
    fetch('/addWishlist', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        productId: productId
      })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        const button = event.target.closest('.wishlist-btn');
        button.classList.add('added');
        showToast('Product added to wishlist!', 'success');
      } else {
        showToast(data.message || 'Failed to add to wishlist', 'error');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      showToast('Something went wrong. Please try again.', 'error');
    });
  }
  
  // Toast notification
  function showToast(message, type = "info") {
    Toastify({
      text: message,
      duration: 3000,
      close: true,
      gravity: "top",
      position: "right",
      backgroundColor: type === "success" ? "#4CAF50" : 
                      type === "info" ? "#1286b4" : 
                      type === "warning" ? "#FF9800" : "#F44336",
    }).showToast();
  }
  
  // Initialize the page
  document.addEventListener('DOMContentLoaded', function() {
    updateAppliedFilters();
    
    // Open the first filter section by default
    const firstSection = document.querySelector('.filter-section');
    if (firstSection) {
      firstSection.classList.add('open');
    }
  });
</script>

<%- include('../../views/partials/user/footer') %>