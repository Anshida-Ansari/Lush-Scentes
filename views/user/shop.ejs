<%- include('../../views/partials/user/header') %>

<style>
  /* Filter Sidebar Outline */
  .shop-container {
    display: flex;
    width: 100%;
    min-height: 100vh;
    padding: 20px;
  }
  
  .filters-sidebar {
    width: 280px;
    padding: 20px;
    background: #fff;
    border-right: 1px solid #eee;
    height: 100%;
  }
  
  .products-grid {
    flex: 1;
    padding: 20px 30px;
  }
  
  .filter-section {
    margin-bottom: 25px;
  }
  
  .filter-section h3 {
    font-size: 16px;
    margin-bottom: 10px;
    color: #333;
    font-weight: 600;
  }
  
  /* Enhanced Search Box */
  .search-container {
    position: relative;
    margin-bottom: 15px;
  }
  
  .search-input {
    width: 100%;
    padding: 10px 40px 10px 15px;
    border: 1px solid #ddd;
    border-radius: 25px;
    font-size: 14px;
    outline: none;
    transition: border-color 0.3s;
  }
  
  .search-input:focus {
    border-color: #e34298;
  }
  
  .search-icon {
    position: absolute;
    right: 15px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 16px;
    color: #666;
    cursor: pointer;
  }
  
  /* Category Filter as Dropdown/Button */
  .category-select {
    width: 100%;
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 14px;
    background: #fff;
    cursor: pointer;
    text-align: left;
    position: relative;
  }
  
  .category-select:focus {
    border-color: #e34298;
    outline: none;
  }
  
  .category-options {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;
    background: #fff;
    border: 1px solid #ddd;
    border-radius: 4px;
    z-index: 10;
    max-height: 200px;
    overflow-y: auto;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  }
  
  .category-options.active {
    display: block;
  }
  
  .category-options label {
    display: block;
    padding: 8px 15px;
    cursor: pointer;
  }
  
  .category-options input[type="radio"] {
    margin-right: 10px;
  }
  
  .filter-select {
    width: 100%;
    padding: 8px;
    border: 1px solid #ddd;
    border-radius: 4px;
    margin-bottom: 10px;
    font-size: 14px;
  }
  
  .filter-button {
    width: 100%;
    padding: 10px;
    background: #e34298;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    margin-bottom: 10px;
  }
  
  .filter-button:hover {
    background: #e34298;
  }
  
  .clear-button {
    width: 100%;
    padding: 10px;
    background: #f8f9fa;
    color: #333;
    border: 1px solid #ddd;
    border-radius: 4px;
    cursor: pointer;
    text-align: center;
    text-decoration: none;
  }
  
  .clear-button:hover {
    background: #efe9ec;
  }
  
  .products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
    padding: 20px;
  }
  
  .product-card {
    border: 1px solid #eee;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.2s;
  }
  
  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
  }
  
  .product-image {
    width: 100%;
    height: 250px;
    object-fit: cover;
  }
  
  .product-info {
    padding: 15px;
  }
  
  .product-name {
    font-size: 16px;
    color: #333;
    margin-bottom: 8px;
    text-decoration: none;
  }
  
  .product-price {
    font-size: 18px;
    font-weight: bold;
    color: #000001;
  }
  
  .no-results {
    display: block;
    text-align: center;
    width: 100%;
    padding: 40px;
    color: #666;
    font-size: 16px;
  }

  .product-image-container {
    position: relative;
  }

  .wishlist-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    background: rgba(255, 255, 255, 0.8);
    border: none;
    border-radius: 50%;
    width: 30px;
    height: 30px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: background 0.3s, color 0.3s;
  }

  .wishlist-btn:hover {
    background: rgba(255, 255, 255, 1);
    color: #ff2020;
  }

  .wishlist-btn .icon-heart-o::before {
    content: "\2661";
    font-size: 18px;
  }

  .wishlist-btn.added .icon-heart-o::before {
    content: "\2665";
    color: #ff2020;
  }

  .price-slider-container {
    padding: 10px 0;
  }

  .slider {
    width: 100%;
    margin: 10px 0;
    -webkit-appearance: none;
    height: 5px;
    background: #ddd;
    outline: none;
    border-radius: 5px;
  }

  .slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 15px;
    height: 15px;
    background: #e34298;
    cursor: pointer;
    border-radius: 50%;
  }

  .price-values {
    display: flex;
    justify-content: space-between;
    font-size: 14px;
    color: #666;
    margin-top: 10px;
  }
</style>

<div class="site-wrap">
  <div class="shop-container">
    <div class="filters-sidebar">
      <form action="/shop" method="get">
        <!-- Enhanced Search Bar with Icon -->
        <div class="filter-section">
          <div class="search-container">
            <input 
              type="text" 
              name="search" 
              class="search-input" 
              placeholder="Search products..." 
              value="<%= query.search || '' %>"
            >
            <span class="search-icon"><i class="fas fa-search"></i></span>
          </div>
        </div>
    
        <!-- Category Filter as Dropdown -->
        <div class="filter-section">
          <h3>Category</h3>
          <div class="category-select" onclick="toggleCategoryOptions()">
            <%= selectedCategory ? categories.find(c => c._id.toString() === selectedCategory)?.name || 'Select Category' : 'Select Category' %>
            <div class="category-options" id="categoryOptions">
              <label>
                <input type="radio" name="category" value="" <%= !selectedCategory ? 'checked' : '' %>> All Categories
              </label>
              <% categories.forEach(function(category) { %>
                <label>
                  <input type="radio" name="category" value="<%= category._id %>" <%= selectedCategory === category._id.toString() ? 'checked' : '' %>> <%= category.name %>
                </label>
              <% }); %>
            </div>
          </div>
        </div>
    
        <!-- Price Range Slider (500-15000) -->
        <div class="filter-section">
          <h3>Price Range (₹)</h3>
          <div class="price-slider-container">
            <input 
              type="range" 
              min="500" 
              max="15000" 
              value="<%= selectedPriceRange ? selectedPriceRange.split('-')[0] : '500' %>" 
              class="slider" 
              id="priceMin"
              name="priceMin"
            >
            <input 
              type="range" 
              min="500" 
              max="15000" 
              value="<%= selectedPriceRange ? (selectedPriceRange.split('-')[1] || '15000') : '15000' %>" 
              class="slider" 
              id="priceMax"
              name="priceMax"
            >
            <div class="price-values">
              <span id="min-value">₹<%= selectedPriceRange ? selectedPriceRange.split('-')[0] : '500' %></span>
              <span>-</span>
              <span id="max-value">₹<%= selectedPriceRange ? (selectedPriceRange.split('-')[1] || '15000') : '15000' %></span>
            </div>
          </div>
        </div>
    
        <!-- Sort By Filter -->
        <div class="filter-section">
          <h3>Sort By</h3>
          <select name="sortBy" class="filter-select">
            <option value="">Select Sorting</option>
            <option value="priceLowToHigh" <%= sortBy === 'priceLowToHigh' ? 'selected' : '' %>>Price: Low to High</option>
            <option value="nameAZ" <%= sortBy === 'nameAZ' ? 'selected' : '' %>>Alphabetical (A-Z)</option>
            <option value="newest" <%= sortBy === 'newest' ? 'selected' : '' %>>New Arrivals</option>
          </select>
        </div>
    
        <button type="submit" class="filter-button">Apply Filters</button>
        <a href="/shop" class="clear-button">Clear Filters</a>
      </form>
    </div>
    
    <div class="products-grid">
      <% if (noProductsFound) { %>
        <div class="no-results">
          <p>No products found matching your filters.</p>
        </div>
      <% } else { %>
        <% products.forEach(function(product) { %>
          <div class="product-card">
            <div class="product-image-container">
              <a href="/productDetailsPage?id=<%= product._id %>">
                <img 
                  src="<%= product.productImage[0] %>" 
                  alt="<%= product.productName %>" 
                  class="product-image"
                >
              </a>
              <button 
                class="wishlist-btn" 
                onclick="addToWishlist('<%= product._id %>', event)"
                title="Add to Wishlist"
              >
                <span class="icon-heart-o"></span>
              </button>
            </div>
            <div class="product-info">
              <a href="/productDetailsPage?id=<%= product._id %>" class="product-name">
                <%= product.productName %>
              </a>
              <% 
                let defaultVariant = product.variants.find(v => v.size === '15ml') || product.variants[0];
                let displayPrice = defaultVariant.salesPrice || defaultVariant.regularPrice;
              %>
              <div class="product-price">₹<%= displayPrice %></div>
              <div class="product-size"><%= defaultVariant.size %></div> 
            </div>
          </div>
        <% }); %>
      <% } %>
    </div>
  </div>
</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script>
  const priceMin = document.getElementById('priceMin');
  const priceMax = document.getElementById('priceMax');
  const minValue = document.getElementById('min-value');
  const maxValue = document.getElementById('max-value');
  const categorySelect = document.querySelector('.category-select');
  const categoryOptions = document.getElementById('categoryOptions');

  function updatePriceValues() {
    let min = parseInt(priceMin.value);
    let max = parseInt(priceMax.value);
    
    if (min < 500) min = 500;
    if (max > 15000) max = 15000;
    if (min > max) {
      [min, max] = [max, min];
      priceMin.value = min;
      priceMax.value = max;
    }
    
    minValue.textContent = `₹${min}`;
    maxValue.textContent = `₹${max}`;
    document.querySelector('form').dispatchEvent(new Event('change'));
  }

  priceMin.addEventListener('input', updatePriceValues);
  priceMax.addEventListener('input', updatePriceValues);
  updatePriceValues();

  document.querySelector('form').addEventListener('submit', (e) => {
    console.log('Form submitted with:', {
      priceMin: priceMin.value,
      priceMax: priceMax.value
    });
  });

  function toggleCategoryOptions() {
    categoryOptions.classList.toggle('active');
  }

  // Close dropdown when clicking outside
  document.addEventListener('click', (e) => {
    if (!categorySelect.contains(e.target)) {
      categoryOptions.classList.remove('active');
    }
  });

  function showToast(message, type = "info") {
    const colors = {
      success: { bg: "#4CAF50", text: "#fff" },
      info: { bg: "#1286b4", text: "#fff" },
      warning: { bg: "#FF9800", text: "#fff" },
      error: { bg: "#F44336", text: "#fff" }
    };
    
    const colorScheme = colors[type] || colors.info;
    
    const toast = document.createElement("div");
    toast.className = "custom-toast";
    toast.innerHTML = `
      <div class="toast-icon">
        ${type === "success" ? '<i class="fas fa-check-circle"></i>' : 
          type === "info" ? '<i class="fas fa-info-circle"></i>' : 
          type === "warning" ? '<i class="fas fa-exclamation-triangle"></i>' : 
          '<i class="fas fa-times-circle"></i>'}
      </div>
      <div class="toast-message">${message}</div>
      <div class="toast-close">×</div>
    `;
    
    Object.assign(toast.style, {
      display: "flex",
      alignItems: "center",
      position: "fixed",
      top: "20px",
      right: "20px",
      zIndex: "10000",
      padding: "12px 16px",
      backgroundColor: colorScheme.bg,
      color: colorScheme.text,
      borderRadius: "4px",
      boxShadow: "0 4px 8px rgba(0, 0, 0, 0.1)",
      minWidth: "250px",
      maxWidth: "350px",
      opacity: "0",
      transform: "translateY(-20px)",
      transition: "all 0.3s ease-in-out",
      fontFamily: "'Segoe UI', Tahoma, Geneva, Verdana, sans-serif",
      fontSize: "14px"
    });
    
    const iconStyle = toast.querySelector(".toast-icon").style;
    Object.assign(iconStyle, {
      marginRight: "12px",
      fontSize: "20px"
    });
    
    const messageStyle = toast.querySelector(".toast-message").style;
    Object.assign(messageStyle, {
      flex: "1"
    });
    
    const closeStyle = toast.querySelector(".toast-close").style;
    Object.assign(closeStyle, {
      marginLeft: "12px",
      cursor: "pointer",
      fontSize: "18px",
      fontWeight: "bold"
    });
    
    toast.querySelector(".toast-close").addEventListener("click", () => {
      toast.style.opacity = "0";
      toast.style.transform = "translateY(-20px)";
      setTimeout(() => toast.remove(), 300);
    });
    
    document.body.appendChild(toast);
    
    const progressBar = document.createElement("div");
    progressBar.className = "toast-progress";
    Object.assign(progressBar.style, {
      position: "absolute",
      bottom: "0",
      left: "0",
      height: "3px",
      backgroundColor: "rgba(255, 255, 255, 0.7)",
      width: "100%",
      transition: "width 3s linear"
    });
    toast.appendChild(progressBar);
    
    setTimeout(() => {
      toast.style.opacity = "1";
      toast.style.transform = "translateY(0)";
      progressBar.style.width = "0";
    }, 10);
    
    setTimeout(() => {
      toast.style.opacity = "0";
      toast.style.transform = "translateY(-20px)";
      setTimeout(() => toast.remove(), 300);
    }, 3000);
  }

  function addToWishlist(productId, event) {
    event.preventDefault();
    
    if (!document.querySelector('link[href*="font-awesome"]')) {
      const fontAwesomeLink = document.createElement('link');
      fontAwesomeLink.rel = 'stylesheet';
      fontAwesomeLink.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css';
      document.head.appendChild(fontAwesomeLink);
    }

    fetch('/addWishlist', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        productId: productId
      })
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        const button = event.target.closest('.wishlist-btn');
        button.classList.add('added');
        showToast('Product added to wishlist!', 'success');
      } else {
        showToast(data.message || 'Failed to add to wishlist', 'error');
      }
    })
    .catch(error => {
      console.error('Error:', error);
      showToast('Something went wrong. Please try again.', 'error');
    });
  }
</script>

<%- include('../../views/partials/user/footer') %>