<%- include("../../views/partials/admin/header") %>

<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css" />
    <style>
        .col-md-3 {
            padding: 20px;
            border: 1px solid #ddd;
            border-radius: 10px;
            margin: 10px;
        }

        .form-label {
            margin-bottom: 8px;
        }

        .form-control {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            box-sizing: border-box;
        }

        .d-grid {
            margin-top: 20px;
        }

        .btn-primary {
            background-color: #007bff;
            color: #fff;
            border: 1px solid #007bff;
            border-radius: 5px;
            padding: 10px 20px;
            cursor: pointer;
        }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

        .pagination .page-link {
            color: #007bff;
            border-radius: 4px;
            margin: 0 2px;
            padding: 6px 12px;
        }

        .pagination .page-item.active .page-link {
            background-color: #007bff;
            border-color: #007bff;
            color: white;
        }

        .pagination .page-item.disabled .page-link {
            color: #6c757d;
            pointer-events: none;
            background-color: #fff;
            border-color: #dee2e6;
        }

        .error-message {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: none;
        }

        .form-control.error {
            border-color: #dc3545;
        }

        .form-control.error:focus {
            box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
        }
    </style>
</head>

<body>
    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Category</h2>
            </div>
        </div>
        <header class="card-header text-center mb-20">
            <form action="/admin/category/" method="get" class="d-inline">
                <div class="input-group input-group-sm border border-1 border-grey rounded-pill" style="width: 500px; margin-left: 230px">
                    <input type="text" class="form-control border-0 rounded-pill mt-3" placeholder="Search categories" name="search" value="<%= req.query.search || '' %>" />
                    <button class="btn" type="submit">Search</button>
                </div>
            </form>
            <!-- Add a Clear Search button -->
            <% if (req.query.search) { %>
                <a href="/admin/category/" class="btn btn-sm btn-secondary ms-2">Clear Search</a>
            <% } %>
        </header>
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3">
                        <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Name</label>
                                <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" />
                                <div id="name-error" class="error-message"></div>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Description</label>
                                <textarea placeholder="Type here" name="description" class="form-control" id="descriptionId"></textarea>
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="d-grid">
                                <button class="btn btn-primary" type="submit">Create category</button>
                            </div>
                        </form>
                    </div>
                    <div class="col-md-8 ml-10">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th class="text-center"></th>
                                        <th>Name</th>
                                        <th>Description</th>
                                        <th>Status</th>
                                        <th class="text-start">Edit</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% cat.forEach((category, index) => { %>
                                    <tr>
                                        <td></td>
                                        <td class="text-start"><%= category.name %></td>
                                        <td class="text-start"><%= category.description %></td>
                                        <td class="text-start">
                                            <% if(!category.isListed) { %>
                                            <button class="btn btn-success" style="width: 70px">
                                                <a href="/admin/listCategory?id=<%=category._id%>" class="text-white">List</a>
                                            </button>
                                            <% } else { %>
                                            <button class="btn btn-danger" style="width: 70px">
                                                <a href="/admin/unlistCategory?id=<%=category._id%>" class="text-white">Unlist</a>
                                            </button>
                                            <% } %>
                                        </td>
                                        <td class="text-start">
                                            <a href="/admin/editCategory?id=<%=category._id%>" class="btn btn-info text-white">Edit</a>
                                        </td>
                                    </tr>
                                    <% }) %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container mt-3">
            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center mb-20" style="margin-right: 200px;">
                    <% if (totalPages > 1) { %>
                        <!-- First Button -->
                        <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                            <a class="page-link" href="?page=1&search=<%= encodeURIComponent(req.query.search || '') %>" aria-label="First">
                                <span aria-hidden="true">««</span>
                            </a>
                        </li>

                        <!-- Previous Button -->
                        <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                            <a class="page-link" href="?page=<%= currentPage - 1 %>&search=<%= encodeURIComponent(req.query.search || '') %>" aria-label="Previous">
                                <span aria-hidden="true">«</span>
                            </a>
                        </li>

                        <!-- Page Numbers (Show 3 pages at a time) -->
                        <% 
                            const maxPagesToShow = 3;
                            let startPage = Math.max(1, currentPage - Math.floor(maxPagesToShow / 2));
                            let endPage = Math.min(totalPages, startPage + maxPagesToShow - 1);

                            if (endPage === totalPages) {
                                startPage = Math.max(1, endPage - maxPagesToShow + 1);
                            }
                        %>
                        <% for(let i = startPage; i <= endPage; i++) { %>
                            <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                <a class="page-link" href="?page=<%= i %>&search=<%= encodeURIComponent(req.query.search || '') %>"><%= i %></a>
                            </li>
                        <% } %>

                        <!-- Next Button -->
                        <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                            <a class="page-link" href="?page=<%= currentPage + 1 %>&search=<%= encodeURIComponent(req.query.search || '') %>" aria-label="Next">
                                <span aria-hidden="true">»</span>
                            </a>
                        </li>

                        <!-- Last Button -->
                        <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                            <a class="page-link" href="?page=<%= totalPages %>&search=<%= encodeURIComponent(req.query.search || '') %>" aria-label="Last">
                                <span aria-hidden="true">»»</span>
                            </a>
                        </li>
                    <% } %>
                </ul>
            </nav>
        </div>
    </section>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>
       function handleFormSubmit(event) {
    event.preventDefault();

    const name = document.getElementsByName('name')[0].value.trim();
    const description = document.getElementById('descriptionId').value.trim();

    clearErrorMessages();

    // Regex to allow only letters and spaces
    const alphaOnlyRegex = /^[A-Za-z\s]+$/;

    // Validate name field
    if (!name) {
        showError('name-error', 'Name is required');
        Swal.fire({
            icon: 'warning',
            title: 'Missing Field',
            text: 'Name is required'
        });
        return false;
    }

    if (!alphaOnlyRegex.test(name)) {
        showError('name-error', 'Name can only contain letters and spaces');
        Swal.fire({
            icon: 'warning',
            title: 'Invalid Input',
            text: 'Name can only contain letters and spaces'
        });
        return false;
    }

    // Validate description field
    if (!description) {
        showError('description-error', 'Description is required');
        Swal.fire({
            icon: 'warning',
            title: 'Missing Field',
            text: 'Description is required'
        });
        return false;
    }

    fetch('/admin/addCategory', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ name, description })
    })
    .then(response => {
        if (!response.ok) {
            return response.json().then(err => {
                throw new Error(err.error);
            });
        }
        return response.json();
    })
    .then(data => {
        Swal.fire({
            icon: 'success',
            title: 'Success',
            text: data.message || 'Category added successfully'
        }).then(() => {
            location.reload();
        });
    })
    .catch(error => {
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'An error occurred while adding the category'
        });
    });
}

function showError(elementId, message) {
    const errorElement = document.getElementById(elementId);
    errorElement.innerHTML = message;
    errorElement.style.display = 'block';
    const inputElement = document.getElementById(elementId.replace('-error', ''));
    inputElement.classList.add('error');
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach((element) => {
        element.innerHTML = '';
        element.style.display = 'none';
    });
    const inputElements = document.getElementsByClassName('form-control');
    Array.from(inputElements).forEach((element) => {
        element.classList.remove('error');
    });
}

        async function addOffer(categoryId) {
            const { value: amount } = await Swal.fire({
                title: 'Offer in percentage',
                input: 'number',
                inputLabel: 'Percentage',
                inputPlaceholder: '%'
            });
            
            if (amount) {
                try {
                    const response = await fetch('/admin/addCategoryOffer', {
                        method: 'POST',
                        headers: {
                            'content-type': 'application/json'
                        },
                        body: JSON.stringify({
                            percentage: amount,
                            categoryId: categoryId,
                        }),
                    });

                    const data = await response.json();
                    if (response.ok && data.status === true) {
                        Swal.fire(
                            'Offer added',
                            'The offer has been added',
                            'success'
                        ).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire('Failed', data.message || 'Adding offer failed', 'error');
                    }
                } catch (error) {
                    Swal.fire(
                        'Error',
                        'An error occurred while adding the offer',
                        'error'
                    );
                    console.log('Error adding offer', error);
                }
            }
        }

        async function removeOffer(categoryId) {
            try {
                const response = await fetch('/admin/removeCategoryOffer', {
                    method: "POST",
                    headers: {
                        'content-type': 'application/json'
                    },
                    body: JSON.stringify({
                        categoryId: categoryId,
                    })
                });

                const data = await response.json();

                if (response.ok && data.status === true) {
                    Swal.fire(
                        'Offer removed',
                        'The offer has been removed',
                        'success'
                    ).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire('Failed', data.message || 'Removing offer failed', 'error');
                }
            } catch (error) {
                Swal.fire(
                    'Error',
                    'An error occurred while removing the offer',
                    'error'
                );
                console.error('Error removing the offer', error);
            }
        }
    </script>

    <%- include("../../views/partials/admin/footer") %>
</body>